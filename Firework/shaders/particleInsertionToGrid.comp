#version 460

layout(local_size_x = 256) in;

layout(std430, binding = 0) buffer Positions {
    vec4 positions[];
};

layout(std430, binding = 4) buffer GridData {
    uint gridStartIndices[];
    uint particleGridIndices[];
};

uniform float cellSize;
uniform ivec3 gridResolution;
uniform uint numParticles;

void main() {
    uint id = gl_GlobalInvocationID.x;
    if (id >= numParticles) return;

    // Compute grid index
    vec3 position = positions[id].xyz;
    ivec3 gridIndex = ivec3(floor(position / cellSize));

    // Calculate cell ID
    uint cellID = (gridIndex.x * 73856093) ^ (gridIndex.y * 19349663) ^ (gridIndex.z * 83492791);
    cellID %= gridResolution.x * gridResolution.y * gridResolution.z;

    // Atomic operation to find particle index position
    uint insertIndex = atomicAdd(gridStartIndices[cellID], 1);

    // Calculate offset in the SSBO
    uint offset = gridResolution.x * gridResolution.y * gridResolution.z;
    particleGridIndices[offset + insertIndex] = id;
}
