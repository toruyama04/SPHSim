#version 460

layout(local_size_x = 256) in;

layout(std430, binding = 6) buffer binIndexForParticleSSBO {
    uint binIndexForParticle[];
};

layout(std430, binding = 8) buffer particlesOrderedByBinSSBO {
    uint particlesOrderedByBin[];
};

layout(std430, binding = 9) buffer prefixIndexCounterSSBO {
    uint prefixIndexCounter[];
};

layout(std430, binding = 7) buffer prefixForBinReorderSSBO {
    uint prefixForBinReorder[];
};

uniform uint particleNum;

void main() {
    uint idx = gl_GlobalInvocationID.x;
    if (idx >= particleNum) return;

    uint binIndex = binIndexForParticle[idx];

    // atomicAdd returns value before increasing it
    // we use the buffer as a counter so that each particle is placed
    // in its correct position 
    uint posInOrderedArray = atomicAdd(prefixIndexCounter[binIndex], 1);

    particlesOrderedByBin[prefixForBinReorder[binIndex] + posInOrderedArray] = idx;
}
