#version 460

layout(local_size_x = 256) in;

layout(std430, binding = 0) buffer particlePositionsSSBO {
    vec4 particlePositions[];
};

layout(std430, binding = 10) buffer binIndexForParticleSSBO {
    uint binIndexForParticle[];
};

layout(std430, binding = 12) buffer particlesOrderedByBinSSBO {
    uint particlesOrderedByBin[];
};

layout(std430, binding = 16) buffer prefixIndexCounter {
    uint prefixCounter[];
};

layout(std430, binding = 11) buffer prefixS {
    uint prefixSum[];
};


uniform uint numParticles;

void main() {
    uint id = gl_GlobalInvocationID.x;

    if (id >= numParticles) return;

    // Read the bin index for this particle
    uint binIndex = binIndexForParticle[id];

    // Use atomic add to get a unique position within the reordered buffer for this bin
    uint posInOrderedArray = atomicAdd(prefixCounter[binIndex], 1);

    // Reorder particle into the correct position
    particlesOrderedByBin[prefixSum[binIndex] + posInOrderedArray] = id;
}
