#version 460

layout(local_size_x = 256) in;

layout(std430, binding = 0) buffer Positions {
    vec4 positions[];
};

layout(std430, binding = 1) buffer Velocities {
    vec4 velocities[];
};

layout(std430, binding = 5) buffer ForcesSSBO {
    vec4 forces[];
};

uniform float mass;
uniform float dt;
uniform uint particleNum;
uniform vec3 boundaryMin;
uniform vec3 boundaryMax;

void main()
{
    uint idx = gl_GlobalInvocationID.x;
    if (idx >= particleNum) return;

    vec3 pos = positions[idx].xyz;
    vec3 vel = velocities[idx].xyz;
    vec3 force = forces[idx].xyz;
    
    vel += dt * (force / mass);
    // pos += dt * vel;

    if (pos.x < boundaryMin.x) {
        pos.x = boundaryMin.x;
        vel.x *= -0.8;
    }
    if (pos.x > boundaryMax.x) {
        pos.x = boundaryMax.x;
        vel.x *= -0.8;
    }
    if (pos.y < boundaryMin.y) {
        pos.y = boundaryMin.y;
        vel.y *= -0.8;
    }
    if (pos.y > boundaryMax.y) {
        pos.y = boundaryMax.y;
        vel.y *= -0.8;
    }
    if (pos.z < boundaryMin.z) {
        pos.z = boundaryMin.z;
        vel.z *= -0.8;
    }
    if (pos.z > boundaryMax.z) {
        pos.z = boundaryMax.z;
        vel.z *= -0.8;
    }

    positions[idx].xyz = pos;
    velocities[idx].xyz = vel;
}