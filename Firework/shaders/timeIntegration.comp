#version 460

layout(local_size_x = 256) in;

layout(std430, binding = 0) buffer Positions {
    vec4 positions[];
};

layout(std430, binding = 1) buffer Velocities {
    vec4 velocities[];
};

layout(std430, binding = 5) buffer ForcesSSBO {
    vec4 forces[];
};

layout(std430, binding = 15) buffer prefixIndex {
    uint indexCount[];
};

layout(std430, binding = 14) buffer neighborListSSBO {
    uint neighborList[];
};


uniform float mass;
uniform float timeStep;
uniform uint particleNum;
uniform uint maxNeighbourNum;

void main()
{
    uint idx = gl_GlobalInvocationID.x;
    if (idx >= particleNum) return;

    vec3 pos = positions[idx].xyz;
    vec3 vel = velocities[idx].xyz;
    vec3 force = forces[idx].xyz;
    
    vel += (force / mass) * timeStep;
    //vel *= 0.99;
    pos += vel * timeStep;

    //velocities[idx].xyz = vel;
    //positions[idx].xyz = pos;


    forces[idx] = vec4(0.0, 0.0, 0.0, 0.0);
    indexCount[idx] = 0;
    uint index = idx * maxNeighbourNum;
    for (uint i = index; i < index + maxNeighbourNum; ++i)
    {
        neighborList[i] = 0;
    }
}