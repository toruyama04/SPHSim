#version 460

layout(local_size_x = 256) in;

layout(std430, binding = 0) buffer Positions {
    vec4 positions[];
};

layout(std430, binding = 6) buffer DensitySSBO {
    float densities[];
};

layout(std430, binding = 14) buffer NeighbourListSSBO {
    uint neighbourList[];
};

layout(std430, binding = 16) buffer EndIndex {
    uint endIndex[];
};

uniform float h;
uniform float h2;
uniform float mass;
uniform uint particleNum;
uniform uint maxNeighbourNum;
uniform float poly6mass;
uniform float p0;


void main()
{
    uint idx = gl_GlobalInvocationID.x;
    if (idx >= particleNum) return;

    uint startIndex = idx * maxNeighbourNum;
    uint endI = endIndex[idx];

    float densitySum = 0.0;

    vec3 x_i = positions[idx].xyz;

    // going through each neighbour
    for (uint i = startIndex; i < endI; ++i)
    {
        uint ni = neighbourList[i];
        vec3 x_j = positions[ni].xyz;
        vec3 diff = x_i - x_j;
        float dist2 = dot(diff, diff);
        if (dist2 < h2)
        {
            float w = poly6mass * pow(h2 - dist2, 3.0);
            densitySum += w;
        }
    }
    densities[idx] = max(p0, densitySum);
}