#version 450 core

layout(local_size_x = 256) in;


layout(std430, binding = 0) buffer Positions {
    vec4 positions[];
};

layout(std430, binding = 1) buffer Velocities {
    vec4 velocity[];
};

layout(binding = 0, offset = 0) uniform atomic_uint aliveCount;
 

uniform float trailRate;
uniform uint maxParticle;


void main()
{
    uint id = gl_GlobalInvocationID.x;
    if (positions[id].w <= 0.0)
    {
        return;
    }
    uint aliveCountValue = atomicCounter(aliveCount);
    uint index = id + aliveCountValue;
    if (index > maxParticle)
    {
        return;
    }
    float offsetX = sin(float(id) * 12.9898) * 0.43758;
    float offsetY = cos(float(id) * 4.1414) * 0.21798;
    float offsetZ = sin(float(id) * 7.6736) * 0.14354;
    vec3 smallOffset = vec3(offsetX, offsetY, offsetZ) * 0.01;
    positions[index] = vec4(positions[id].xyz, (positions[id].w / velocity[id].w) * 2.75);
    velocity[index] = vec4((velocity[id].xyz * trailRate) + smallOffset, 2.0);
    atomicCounterIncrement(aliveCount);
}
