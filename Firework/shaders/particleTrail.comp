#version 450 core

layout(local_size_x = 256) in;


layout(std430, binding = 0) buffer Positions {
    vec4 positions[];
};

layout(std430, binding = 1) buffer Velocities {
    vec4 velocity[];
};

layout(std430, binding = 2) buffer Colours {
    vec4 colours[];
};

layout(std430, binding = 3) buffer RegionPoints {
    vec4 regionPoint[];
};

layout(std430, binding = 4) buffer Origin {
    vec4 origin[];
};


uniform float trailFadeRate = 1.0;
uniform float trailRate = 0.7;
uniform int maxParticle = 65536;
uniform int aliveCount;

void main()
{
    uint id = gl_GlobalInvocationID.x;
    if (origin[id].w <= 0.0)
    {
        return;
    }
    uint index = id + aliveCount;
    if (index > maxParticle)
    {
        return;
    }
    regionPoint[index] = vec4(regionPoint[id].x, regionPoint[id].y, regionPoint[id].z, 0.0);
    positions[index] = positions[id];
    velocity[index] = vec4(velocity[id].x * trailRate, velocity[id].y * trailRate, velocity[id].z * trailRate, trailFadeRate);
    origin[index] = vec4(origin[id].x, origin[id].y, origin[id].z, (origin[id].w / colours[id].x) * 2.5);
    colours[index] = vec4(2.5, 1.0, 1.0, colours[id].w);
}
